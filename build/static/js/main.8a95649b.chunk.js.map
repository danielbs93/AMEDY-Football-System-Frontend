{"version":3,"sources":["assets/surgeryImage.jpg","components/pages/About.js","history.js","components/Login.js","components/UserFunctions.js","components/pages/Home.js","components/pages/Contact.js","components/pages/NoMatch.js","components/layout/Layout.js","components/NavigationBar.js","components/Jumbotron.js","components/pages/Menu.js","components/pages/Register.js","components/pages/ViewBoard.js","components/pages/OrthopedicMenu.js","components/pages/PreOpMenu.js","components/pages/OpMngmtMenu.js","components/pages/AwaitingSurgeries.js","components/pages/AwaitingSurgerisTest.js","components/pages/ViewBoardTest.js","components/EventModal.js","components/pages/Calendar.js","components/pages/Patients.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","About","createBrowserHistory","Styles","styled","div","Login","props","state","email","password","onChange","bind","onSubmit","e","this","setState","target","name","value","preventDefault","user","axios","post","then","res","localStorage","setItem","data","catch","err","console","log","login","history","push","className","Container","Form","Group","controlId","Label","Control","type","placeholder","Text","Button","variant","href","React","Component","Home","Contact","NoMatch","Layout","children","NavigationBar","removeItem","loginRegLink","Nav","Item","Link","userLink","onClick","logOut","Navbar","expand","Brand","Toggle","aria-controls","Collapse","id","user_token","surgeryImage","Jumbotron","fluid","Menu","size","block","Media","Body","Register","first_name","last_name","new_user","ViewBoard","surgeries","isLoading","getSurgeries","fetch","json","local_data","dataSource","EndTime","Date","StartTime","surgeries_to_view","end_time","start_time","Subject","description","currentView","selectedDate","eventSettings","services","Day","Week","WorkWeek","Month","Agenda","OrthopedicMenu","PreOpMenu","OpMngmtMenu","AwaitingSurgeries","awaiting_surgeries","method","awaiting_surgeries_data","classes","makeStyles","table","minWidth","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","surgery","key","req_id","request_id","patient_id","domain","priority","columns","selector","sortable","AwaitingSurgeriesTest","updateState","selectedRows","title","highlightOnHover","selectableRows","dense","onSelectedRowsChange","groups","items","group","moment","canMove","add","ViewBoardTest","defaultTimeStart","defaultTimeEnd","EventModal","Modal","aria-labelledby","centered","Header","closeButton","Title","Footer","onHide","Calendar","EventModalShow","eventClickFunc","info","event","jsEvent","handleDateClick","arg","filter","date","dateStr","editable","dateClick","defaultView","plugins","dayGridPlugin","bootstrapPlugin","interactionPlugin","listPlugin","events","eventClick","header","left","center","right","themeSystem","show","Patients","patients","number_of_cancellations","awaiting_since","date_of_birth","gender","address","phone_number","type_of_surgery","duration","status","complexity_scale","expiration_date_of_examine","new_patient","patient_to_add","alert","window","location","reload","patients_data","Accordion","Card","as","eventKey","App","Fragment","exact","path","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.8a95649b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/surgeryImage.0257fa9a.jpg\";","import React from 'react'\r\n\r\nexport const About = () => (\r\n    <div>\r\n          <h2>About Page</h2>  \r\n          <p>This is the Multi-Agent Management of Soroka's Operating rooms</p>\r\n    </div>\r\n)\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();\r\n","import React from 'react';\r\nimport { Container, Form, Button } from 'react-bootstrap';\r\nimport { login } from './UserFunctions';\r\n// import { Menu } from './pages/Menu';\r\nimport styled from 'styled-components';\r\nimport history from '../history';\r\n\r\n\r\nconst Styles = styled.div`\r\n    .overlay {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        bottom: 0;\r\n        right: 0;\r\n        z-index: -1;\r\n    }\r\n`;\r\n\r\nexport class Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const user = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        };\r\n        \r\n        login(user).then(res => {\r\n            if (res) {\r\n                history.push(`/preopmenu`);\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <Styles>\r\n                <div className=\"overlay\"></div>\r\n                <Container>\r\n                    <Form onSubmit={this.onSubmit}>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Email address</Form.Label>\r\n                            <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\" onChange={this.onChange}/>\r\n                            <Form.Text className=\"text-muted\">\r\n                                We'll never share your email with anyone else.\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" onChange={this.onChange}/>\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                        </Button>\r\n                        <Button variant=\"primary\" type=\"submit\" href=\"/register\">\r\n                            Register\r\n                        </Button>\r\n                    </Form>\r\n                </Container>\r\n            </Styles>\r\n        )\r\n    }\r\n}","import axios from 'axios'\r\n\r\nexport const register = new_user => {\r\n    return axios\r\n    .post('https://server-soroka-demo.herokuapp.com/users/register', {\r\n        first_name: new_user.first_name,\r\n        last_name: new_user.last_name, \r\n        email: new_user.email,\r\n        password: new_user.password\r\n    })\r\n    .then(res => {\r\n        console.log('Registered')\r\n    })\r\n    .catch(err => {\r\n        console.log('Error: ' + err)\r\n    })\r\n}\r\n\r\nexport const login = user => {\r\n    return axios\r\n    .post('https://server-soroka-demo.herokuapp.com/users/login', {\r\n        email: user.email,\r\n        password: user.password\r\n    })\r\n    .then(res => {\r\n        localStorage.setItem('usertoken', res.data)\r\n        return res.data\r\n    })\r\n    .catch(err => {\r\n        console.log(err)\r\n    })\r\n}\r\n\r\nexport const getSurgeries = () => {\r\n    return axios\r\n    .get('https://server-soroka-demo.herokuapp.com/surgeries', {\r\n    })\r\n    .then(res => {\r\n        return res\r\n    })\r\n    .catch(err => {\r\n        console.log(err)\r\n    })\r\n}\r\n\r\nexport const addPatient = new_patient => {\r\n    return axios\r\n    .post('https://server-soroka-demo.herokuapp.com/patients/add', {\r\n        patient_id: new_patient.patient_id,\r\n        number_of_cancellations: new_patient.number_of_cancellations,\r\n        awaiting_since: new_patient.awaiting_since,\r\n        first_name: new_patient.first_name,\r\n        last_name: new_patient.last_name,\r\n        date_of_birth: new_patient.date_of_birth,\r\n        gender: new_patient.gender,\r\n        address: new_patient.address,\r\n        phone_number: new_patient.phone_number,\r\n        type_of_surgery: new_patient.type_of_surgery,\r\n        duration: new_patient.duration,\r\n        status: new_patient.status,\r\n        complexity_scale: new_patient.complexity_scale,\r\n        expiration_date_of_examine: new_patient.expiration_date_of_examine        \r\n    })\r\n    .then(res => {\r\n        console.log('Added patient')\r\n    })\r\n    .catch(err => {\r\n        console.log('Error: ' + err)\r\n    })\r\n}","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { Login } from '../Login';                                     // Login component\r\n\r\n\r\nconst Styles = styled.div`\r\n    .h2 {\r\n        position: center;\r\n        color: #fff;\r\n    }\r\n`;\r\n\r\nexport const Home = () => (\r\n    <Styles>\r\n        <div>\r\n            <h2>User Login</h2>  \r\n        </div>\r\n        <Login history={[]}/>\r\n    </Styles>\r\n)\r\n","import React from 'react'\r\n\r\nexport const Contact = () => (\r\n    <div>\r\n          <h2>Contact Us</h2>  \r\n          <p>raz@gmail.com</p>\r\n    </div>\r\n)\r\n","import React from 'react'\r\n\r\nexport const NoMatch = () => (\r\n    <div>\r\n          <h1>No Match</h1>  \r\n          <p>Page doesn't exist yet</p>\r\n    </div>\r\n)\r\n","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nexport const Layout = (props) => (\r\n    <Container>\r\n        {props.children}\r\n    </Container>\r\n)","import React from 'react';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\n\r\nconst Styles = styled.div`\r\n    .navbar {\r\n        background-color: #222;\r\n    }\r\n\r\n    .navbar-brand, .navbar-nav .nav-link {\r\n        color: #bbb;\r\n        &:hover {\r\n            color: white;\r\n        }\r\n    }\r\n`;\r\n\r\nexport class NavigationBar extends React.Component {\r\n\r\n    logOut(e) {\r\n        e.preventDefault();\r\n        localStorage.removeItem('user_token');\r\n        this.props.history.push(`/`);\r\n    }\r\n\r\n    render() {\r\n\r\n        const loginRegLink = (\r\n            <Nav className=\"ml-auto\">\r\n                <Nav.Item><Nav.Link href=\"/login\">Login</Nav.Link></Nav.Item>\r\n                <Nav.Item><Nav.Link href=\"/register\">Register</Nav.Link></Nav.Item>\r\n            </Nav>\r\n        );\r\n\r\n        const userLink = (\r\n            <Nav className=\"ml-auto\">\r\n                <Nav.Item><Nav.Link href=\"/logout\" onClick={this.logOut.bind(this)}>Login</Nav.Link></Nav.Item>\r\n            </Nav>                \r\n        );\r\n\r\n\r\n        return (\r\n        <Styles>\r\n            <Navbar expand=\"lg\">\r\n                <Navbar.Brand href=\"/\">Soroka's Operating Rooms System</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"ml-auto\">\r\n                        <Nav.Item><Nav.Link href=\"/preopmenu\">Home</Nav.Link></Nav.Item>\r\n                        <Nav.Item><Nav.Link href=\"/about\">About</Nav.Link></Nav.Item>\r\n                        <Nav.Item><Nav.Link href=\"/contact\">Contact</Nav.Link></Nav.Item>\r\n                        {localStorage.user_token ? userLink : loginRegLink}\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </Styles>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Jumbotron as Jumbo, Container } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport surgeryImage from '../assets/surgeryImage.jpg';\r\n\r\nconst Styles = styled.div`\r\n    .jumbo { \r\n        background: url(${surgeryImage}) fixed bottom;\r\n        background-size: cover;\r\n        color: #efefef;\r\n        height: 180px;\r\n        position: relative;\r\n        z-index: -2;\r\n    }\r\n\r\n    .overlay {\r\n        background-color: #000;\r\n        opacity: 0.6;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        bottom: 0;\r\n        right: 0;\r\n        z-index: -1;\r\n    }\r\n`;\r\n\r\nexport const Jumbotron = () => (\r\n    <Styles>\r\n        <Jumbo fluid className=\"jumbo\">\r\n            <div className=\"overlay\"></div>\r\n            <Container>\r\n                <h1>Welcome</h1>\r\n                <p>To Multi-Agent Management of Soroka's Operating rooms</p>\r\n            </Container>\r\n        </Jumbo>\r\n    </Styles>\r\n)","import React from 'react';\r\nimport { Container, Media, Button } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport { IoMdContacts } from 'react-icons/io';\r\nimport { MdPermContactCalendar } from 'react-icons/md';\r\nimport { FaCalendarCheck, FaHospital } from 'react-icons/fa';\r\nimport { AiOutlineCheckCircle } from 'react-icons/ai';\r\n\r\n\r\n\r\nconst Styles = styled.div`\r\n    .container {\r\n        position: center;\r\n    }\r\n`;\r\n\r\nexport class Menu extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const user = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        };\r\n        \r\n        console.log(user.email, user.password);\r\n    }\r\n\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <Styles>\r\n                <div className=\"overlay\"></div>\r\n                <Container>\r\n                    <Button variant=\"primary\" type=\"submit\" href=\"/awaitingsurgeriestest\" size=\"lg\" block>\r\n                        <Media>\r\n                            <IoMdContacts size=\"50\"/>\r\n                            <Media.Body>\r\n                                <h5> Awaiting Surgeries</h5>\r\n                                <p>\r\n                                Surgeries that are waiting for an assignment\r\n                                </p>\r\n                            </Media.Body>    \r\n                        </Media>\r\n                    </Button>\r\n                <br></br>\r\n                    <Button variant=\"primary\" type=\"submit\" href=\"/nomatch\" size=\"lg\" block>\r\n                        <Media>\r\n                            <MdPermContactCalendar size=\"50\"/>\r\n                            <Media.Body>\r\n                                <h5> Surgeons' Shifts </h5>\r\n                                <p>\r\n                                Surgeries that are waiting for an assignment\r\n                                </p>\r\n                            </Media.Body>\r\n                        </Media>\r\n                    </Button>\r\n                <br></br>\r\n                    <Button variant=\"primary\" type=\"submit\" href=\"/viewboard\" size=\"lg\" block>\r\n                        <Media>\r\n                            <FaCalendarCheck size=\"50\"/>\r\n                            <Media.Body >\r\n                                <h5> Current Schedule </h5>\r\n                                <p>\r\n                                Current assignment of surgeries\r\n                                </p>\r\n                            </Media.Body>\r\n                        </Media>\r\n                    </Button>\r\n                <br></br>\r\n                    <Button variant=\"primary\" type=\"submit\" href=\"/nomatch\" size=\"lg\" block>\r\n                        <Media>\r\n                            <FaHospital size=\"50\"/>\r\n                            <Media.Body>\r\n                                <h5> Ward Rooms </h5>\r\n                                <p>\r\n                                The rooms that are assigned to the ward\r\n                                </p>\r\n                            </Media.Body>\r\n                        </Media>\r\n                    </Button>\r\n                <br></br>\r\n                    <Button variant=\"primary\" type=\"submit\" href=\"/nomatch\" size=\"lg\" block>\r\n                        <Media>\r\n                            <AiOutlineCheckCircle size=\"50\"/>\r\n                            <Media.Body>\r\n                                <h5> Final Approval </h5>\r\n                                <p>\r\n                                Final assignment approval\r\n                                </p>\r\n                            </Media.Body>\r\n                        </Media>\r\n                    </Button>\r\n                </Container>\r\n            </Styles>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Container, Form, Button } from 'react-bootstrap';\r\nimport { register } from '../UserFunctions';\r\nimport styled from 'styled-components';\r\nimport history from '../../history';\r\n\r\n\r\nconst Styles = styled.div`\r\n    .overlay {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        bottom: 0;\r\n        right: 0;\r\n        z-index: -1;\r\n    }\r\n\r\n    .h2 {\r\n        position: center;\r\n        color: #fff;\r\n    }\r\n`;\r\n\r\nexport class Register extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            first_name: '',\r\n            last_name: '',\r\n            email: '',\r\n            password: ''\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const user = {\r\n            first_name: this.state.first_name,\r\n            last_name: this.state.last_name,\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        };\r\n        \r\n        register(user).then(res => {\r\n            if (res) {\r\n                history.push(`/login`);\r\n            }\r\n            else {\r\n                console.log('not registered');\r\n                history.push(`/nomatch`);\r\n            }\r\n        }).catch((e) => {\r\n            console.log(e)\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <Styles>\r\n                <h2>User Registration</h2>  \r\n                <div className=\"overlay\"></div>\r\n                <Container>\r\n                    <Form onSubmit={this.onSubmit}>\r\n                    <Form.Group controlId=\"formBasicText1\">\r\n                            <Form.Label>First name</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"first_name\" placeholder=\"Enter first name\" onChange={this.onChange}/>\r\n                            <Form.Text className=\"text-muted\">\r\n                                First name\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicText2\">\r\n                            <Form.Label>Last name</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"last_name\" placeholder=\"Enter last name\" onChange={this.onChange}/>\r\n                            <Form.Text className=\"text-muted\">\r\n                                Last name\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Email address</Form.Label>\r\n                            <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\" onChange={this.onChange}/>\r\n                            <Form.Text className=\"text-muted\">\r\n                                We'll never share your email with anyone else.\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" onChange={this.onChange}/>\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                        </Button>\r\n                    </Form>\r\n                </Container>\r\n            </Styles>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport { Inject, ScheduleComponent, Day, Week, WorkWeek, Month, Agenda } from '@syncfusion/ej2-react-schedule';\r\n\r\n\r\nexport class ViewBoard extends Component {\r\n\r\n    state = { surgeries: [], isLoading: true };\r\n\r\n    \r\n  getSurgeries = () => {\r\n    fetch('https://server-soroka-demo.herokuapp.com/surgeries', {})\r\n      .then(data => data.json())\r\n      .then(data => {\r\n        this.setState({ surgeries: data, isLoading: false })\r\n    })\r\n      .catch(e => console.log(e));\r\n  }\r\n\r\n  local_data = {\r\n      dataSource: [{\r\n          EndTime: new Date(2020,1,26),\r\n          StartTime: new Date(2020,1,26)\r\n      }]\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.getSurgeries();\r\n  }\r\n\r\n    render() {\r\n        const { surgeries, isLoading } = this.state;\r\n\r\n        if (isLoading) {\r\n            return null;\r\n        }\r\n        var surgeries_to_view = {\r\n            dataSource: [\r\n                {\r\n                EndTime: surgeries[0].end_time,\r\n                StartTime: surgeries[0].start_time,\r\n                Subject: surgeries[0].description\r\n                },\r\n                {\r\n                EndTime: surgeries[1].end_time,\r\n                StartTime: surgeries[1].start_time,\r\n                Subject: surgeries[1].description\r\n                }\r\n            ]\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <ScheduleComponent  currentView='Month'  selectedDate={new Date(2020, 1, 11)}\r\n                    eventSettings={surgeries_to_view} EndTime=\"end_time\" StartTime=\"start_time\" Subject=\"descipriton\" > \r\n                    <Inject services={[Day, Week, WorkWeek, Month, Agenda]} />\r\n                    \r\n                </ScheduleComponent >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewBoard\r\n","import React from 'react';\r\nimport { Container, Media, Button } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport { IoMdContacts } from 'react-icons/io';\r\nimport { MdPermContactCalendar } from 'react-icons/md';\r\nimport { FaCalendarCheck } from 'react-icons/fa';\r\n\r\n\r\n\r\nconst Styles = styled.div`\r\n    .overlay {\r\n        position: center;\r\n    }\r\n`;\r\n\r\nexport class OrthopedicMenu extends React.Component {\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <Styles>\r\n                <div className=\"overlay\"></div>\r\n                <Container>\r\n                    <Button variant=\"primary\" type=\"submit\" href=\"/nomatch\" size=\"lg\" block>\r\n                        <Media>\r\n                            <IoMdContacts size=\"50\"/>\r\n                            <Media.Body>\r\n                                <h5> Units View</h5>\r\n                                <p>\r\n                                The units' staff\r\n                                </p>\r\n                            </Media.Body>    \r\n                        </Media>\r\n                    </Button>\r\n                <br></br>\r\n                    <Button variant=\"primary\" type=\"submit\" href=\"/nomatch\" size=\"lg\" block>\r\n                        <Media>\r\n                            <MdPermContactCalendar size=\"50\"/>\r\n                            <Media.Body>\r\n                                <h5> Elective Patients View </h5>\r\n                                <p>\r\n                                Elective patients information table\r\n                                </p>\r\n                            </Media.Body>\r\n                        </Media>\r\n                    </Button>\r\n                <br></br>\r\n                    <Button variant=\"primary\" type=\"submit\" href=\"/viewboard\" size=\"lg\" block>\r\n                        <Media>\r\n                            <FaCalendarCheck size=\"50\"/>\r\n                            <Media.Body >\r\n                                <h5> Rooms Allocation </h5>\r\n                                <p>\r\n                                The ward's operation rooms\r\n                                </p>\r\n                            </Media.Body>\r\n                        </Media>\r\n                    </Button>\r\n                <br></br>\r\n                </Container>\r\n            </Styles>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Container, Media, Button } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport { IoMdContacts } from 'react-icons/io';\r\nimport { MdPermContactCalendar } from 'react-icons/md';\r\nimport { FaCalendarCheck } from 'react-icons/fa';\r\n\r\n\r\n\r\nconst Styles = styled.div`\r\n    .overlay {\r\n        position: center;\r\n    }\r\n`;\r\n\r\nexport class PreOpMenu extends React.Component {\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <Styles>\r\n                <div className=\"overlay\"></div>\r\n                <Container>\r\n                    <Button variant=\"primary\" type=\"submit\" href=\"/calendar\" size=\"lg\" block>\r\n                        <Media>\r\n                            <IoMdContacts size=\"50\"/>\r\n                            <Media.Body>\r\n                                <h5> View Board</h5>\r\n                                <p>\r\n                                The general board\r\n                                </p>\r\n                            </Media.Body>    \r\n                        </Media>\r\n                    </Button>\r\n                <br></br>\r\n                    <Button variant=\"primary\" type=\"submit\" href=\"/nomatch\" size=\"lg\" block>\r\n                        <Media>\r\n                            <MdPermContactCalendar size=\"50\"/>\r\n                            <Media.Body>\r\n                                <h5> Patient Notification List </h5>\r\n                                <p>\r\n                                The patient notification list\r\n                                </p>\r\n                            </Media.Body>\r\n                        </Media>\r\n                    </Button>\r\n                <br></br>\r\n                    <Button variant=\"primary\" type=\"submit\" href=\"/patients\" size=\"lg\" block>\r\n                        <Media>\r\n                            <FaCalendarCheck size=\"50\"/>\r\n                            <Media.Body >\r\n                                <h5> Patients </h5>\r\n                                <p>\r\n                                Patients list\r\n                                </p>\r\n                            </Media.Body>\r\n                        </Media>\r\n                    </Button>\r\n                <br></br>\r\n                    <Button variant=\"primary\" type=\"submit\" href=\"/viewboard\" size=\"lg\" block>\r\n                        <Media>\r\n                            <FaCalendarCheck size=\"50\"/>\r\n                            <Media.Body >\r\n                                <h5> Mail </h5>\r\n                                <p>\r\n                                My email\r\n                                </p>\r\n                            </Media.Body>\r\n                        </Media>\r\n                    </Button>\r\n                <br></br>\r\n                </Container>\r\n            </Styles>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Container, Media, Button } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport { IoMdContacts } from 'react-icons/io';\r\nimport { MdPermContactCalendar } from 'react-icons/md';\r\nimport { FaCalendarCheck } from 'react-icons/fa';\r\n\r\n\r\n\r\nconst Styles = styled.div`\r\n    .overlay {\r\n        position: center;\r\n    }\r\n`;\r\n\r\nexport class OpMngmtMenu extends React.Component {\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <Styles>\r\n                <div className=\"overlay\"></div>\r\n                <Container>\r\n                    <Button variant=\"primary\" type=\"submit\" href=\"/nomatch\" size=\"lg\" block>\r\n                        <Media>\r\n                            <IoMdContacts size=\"50\"/>\r\n                            <Media.Body>\r\n                                <h5> Distribution Plan</h5>\r\n                                <p>\r\n                                Days to rooms distribution plan\r\n                                </p>\r\n                            </Media.Body>    \r\n                        </Media>\r\n                    </Button>\r\n                <br></br>\r\n                    <Button variant=\"primary\" type=\"submit\" href=\"/nomatch\" size=\"lg\" block>\r\n                        <Media>\r\n                            <MdPermContactCalendar size=\"50\"/>\r\n                            <Media.Body>\r\n                                <h5> Daily Plan Approval </h5>\r\n                                <p>\r\n                                All the details about the daily plan\r\n                                </p>\r\n                            </Media.Body>\r\n                        </Media>\r\n                    </Button>\r\n                <br></br>\r\n                    <Button variant=\"primary\" type=\"submit\" href=\"/viewboard\" size=\"lg\" block>\r\n                        <Media>\r\n                            <FaCalendarCheck size=\"50\"/>\r\n                            <Media.Body >\r\n                                <h5> Urgent Scheduling </h5>\r\n                                <p>\r\n                                For urgent cases\r\n                                </p>\r\n                            </Media.Body>\r\n                        </Media>\r\n                    </Button>\r\n                <br></br>\r\n                </Container>\r\n            </Styles>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\n//   function createData(req_id, patient_id, domain, priority) {\r\n//     return { req_id, patient_id, domain, priority };\r\n//   }\r\n\r\n  \r\nexport class AwaitingSurgeries extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            awaiting_surgeries: []\r\n        }\r\n    }\r\n    \r\n\r\n    componentDidMount() {\r\n        const url = 'https://server-soroka-demo.herokuapp.com/awaitingsurgeries';\r\n        fetch(url, {\r\n            method: \"GET\"\r\n        }).then(res => res.json()).then(awaiting_surgeries_data => {\r\n            console.log(awaiting_surgeries_data);\r\n            this.setState({awaiting_surgeries: awaiting_surgeries_data})\r\n        })\r\n    }\r\n\r\n    render() {\r\n        \r\n        const classes = makeStyles({\r\n            table: {\r\n              minWidth: 650,\r\n            },\r\n          });\r\n        // console.log(this.state.awaiting_surgeries);\r\n        \r\n        return (<TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"right\">Request ID</TableCell>\r\n                  <TableCell align=\"right\">Patient ID</TableCell>\r\n                  <TableCell align=\"right\">Domain</TableCell>\r\n                  <TableCell align=\"right\">Priority</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {this.state.awaiting_surgeries.map(surgery => (\r\n                  <TableRow key={surgery.req_id}>\r\n                    <TableCell align=\"right\">{surgery.request_id}</TableCell>\r\n                    <TableCell align=\"right\">{surgery.patient_id}</TableCell>\r\n                    <TableCell align=\"right\">{surgery.domain}</TableCell>\r\n                    <TableCell align=\"right\">{surgery.priority}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>)\r\n    }\r\n}\r\n\r\nexport default AwaitingSurgeries\r\n","import React from 'react';\r\n\r\nimport DataTable from 'react-data-table-component';\r\n \r\nconst columns = [\r\n  {\r\n    name: 'Request ID',\r\n    selector: 'request_id',\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: 'Patient ID',\r\n    selector: 'patient_id',\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: 'Domain',\r\n    selector: 'domain',\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: 'Priority',\r\n    selector: 'priority',\r\n    sortable: true,\r\n  }\r\n];\r\n \r\nexport class AwaitingSurgeriesTest extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            awaiting_surgeries: []\r\n        }\r\n        this.updateState = this.updateState.bind(this);\r\n    }\r\n\r\n    updateState = state => {\r\n        this.setState({ selectedRows: state.selectedRows });\r\n      }\r\n\r\n    componentDidMount() {\r\n        const url = 'https://server-soroka-demo.herokuapp.com/awaitingsurgeries';\r\n        fetch(url, {\r\n            method: \"GET\"\r\n        }).then(res => res.json()).then(awaiting_surgeries_data => {\r\n            this.setState({awaiting_surgeries: awaiting_surgeries_data})\r\n        })\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <DataTable\r\n        title=\"Awaiting Surgeries\"\r\n        columns={columns}\r\n        highlightOnHover\r\n        data={this.state.awaiting_surgeries}\r\n        selectableRows\r\n        dense\r\n        onSelectedRowsChange={this.updateState}\r\n      />\r\n    )\r\n  }\r\n};\r\n \r\nexport default AwaitingSurgeriesTest\r\n","import React, { Component } from 'react'\r\nimport Timeline from 'react-calendar-timeline'\r\nimport 'react-calendar-timeline/lib/Timeline.css'\r\nimport moment from 'moment'\r\n \r\nconst groups = [{ id: 1, title: 'group 1' }, { id: 2, title: 'group 2' }, {id: 3, title: 'group 3'}]\r\n \r\nconst items = [\r\n  {\r\n    id: 1,\r\n    group: 1,\r\n    title: 'item 1',\r\n    start_time: moment(),\r\n    canMove: true,\r\n    end_time: moment().add(1, 'hour')\r\n  },\r\n  {\r\n    id: 2,\r\n    group: 2,\r\n    title: 'item 2',\r\n    start_time: moment().add(-0.5, 'hour'),\r\n    end_time: moment().add(0.5, 'hour')\r\n  },\r\n  {\r\n    id: 3,\r\n    group: 1,\r\n    title: 'item 3',\r\n    start_time: moment().add(2, 'hour'),\r\n    end_time: moment().add(3, 'hour')\r\n  }\r\n]\r\n\r\nexport class ViewBoardTest extends Component {\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Timeline\r\n                    groups={groups}\r\n                    items={items}\r\n                    defaultTimeStart={moment().add(-12, 'hour')}\r\n                    defaultTimeEnd={moment().add(12, 'hour')}\r\n                />\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewBoardTest\r\n","import React, { Component } from 'react';\r\nimport { Modal, Button} from 'react-bootstrap';\r\n\r\nexport class EventModal extends Component {\r\n    \r\n\r\n    render(){\r\n        return (<div>\r\n            <Modal\r\n      {...this.props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Surgery Information\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"container\">\r\n            --- Surgery Information ---\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n        </div>)\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport bootstrapPlugin from '@fullcalendar/bootstrap';\r\nimport listPlugin from '@fullcalendar/list';\r\nimport {EventModal} from '../EventModal';\r\n\r\nimport '@fullcalendar/core/main.css';\r\nimport '@fullcalendar/daygrid/main.css';\r\n\r\n\r\nexport class Calendar extends Component {\r\n\r\n  state = { surgeries: [], isLoading: true };\r\n    \r\n  getSurgeries = () => {\r\n    fetch('https://server-soroka-demo.herokuapp.com/surgeries', {})\r\n      .then(data => data.json())\r\n      .then(data => {\r\n        this.setState({ surgeries: data, isLoading: false, EventModalShow: false })\r\n        \r\n    })\r\n      .catch(e => console.log(e));\r\n  }\r\n\r\n    eventClickFunc = (info) => {\r\n      \r\n      console.log(info.event.title);\r\n      info.jsEvent.preventDefault();\r\n    }\r\n\r\n    handleDateClick = (arg) => { // Need to change Modal to eventClickFunc\r\n        \r\n      this.setState({EventModalShow: true});\r\n        console.log(this.state.surgeries.filter(surgery => surgery.date === arg.dateStr))\r\n      }\r\n\r\n      componentDidMount() {\r\n        this.getSurgeries();\r\n        \r\n      }\r\n\r\n    render() {\r\n\r\n      let EventModalClose = () => this.setState({EventModalShow: false});\r\n\r\n        return (\r\n          \r\n          <div>\r\n            <FullCalendar \r\n            editable='false' \r\n            dateClick={this.handleDateClick} \r\n            defaultView=\"dayGridWeek\" \r\n            plugins={[ dayGridPlugin, bootstrapPlugin, interactionPlugin, listPlugin ]} \r\n            events={this.state.surgeries}\r\n            eventClick={this.eventClickFunc}\r\n            header={{\r\n              left: 'prev,next today',\r\n              center: 'title',\r\n              right: 'dayGridMonth,dayGridWeek,dayGridDay,listMonth'\r\n            }}\r\n\r\n            themeSystem = 'bootstrap'\r\n            />\r\n\r\n            <EventModal\r\n              show={this.state.EventModalShow}\r\n              onHide={EventModalClose}\r\n              props={'hello'}\r\n            />\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Calendar\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Container, Form, Button, Accordion, Card } from 'react-bootstrap';\r\nimport DataTable from 'react-data-table-component';\r\nimport { addPatient } from '../UserFunctions';\r\n\r\nconst Styles = styled.div`\r\n    .overlay {\r\n        position: absolute;\r\n        top: 10px;\r\n        left: 0;\r\n        bottom: 0;\r\n        right: 0;\r\n        z-index: -1;\r\n    }\r\n`;\r\n\r\n \r\nconst columns = [\r\n  {\r\n    name: 'Patient ID',\r\n    selector: 'id',\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: 'First Name',\r\n    selector: 'first_name',\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: 'Last Name',\r\n    selector: 'last_name',\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: 'Date of Birth',\r\n    selector: 'date_of_birth',\r\n    sortable: true\r\n  },\r\n  {\r\n    name: 'Gender',\r\n    selector: 'gender',\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: 'Phone Number',\r\n    selector: 'phone_number',\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: 'Address',\r\n    selector: 'address',\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: 'Type of Surgery',\r\n    selector: 'type_of_surgery',\r\n    sortable: true\r\n  },\r\n  {\r\n    name: 'Duration of Surgery',\r\n    selector: 'duration',\r\n    sortable: true\r\n  },\r\n  {\r\n    name: 'Status',\r\n    selector: 'status',\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: 'Complexity Scale',\r\n    selector: 'complexity_scale',\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: 'Number of Cancellations',\r\n    selector: 'number_of_cancellations',\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: 'Awaiting Since',\r\n    selector: 'awaiting_since',\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: 'Expiration Date of Pre-Operation Examine',\r\n    selector: 'expiration_date_of_examine',\r\n    sortable: true\r\n  }\r\n];\r\n \r\nexport class Patients extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            patients: [],\r\n            id: '',\r\n            number_of_cancellations: '',\r\n            awaiting_since: '',\r\n            first_name: '',\r\n            last_name: '',\r\n            date_of_birth: '',\r\n            gender: '',\r\n            address: '',\r\n            phone_number: '',\r\n            type_of_surgery: '',\r\n            duration: '',\r\n            status: '',\r\n            complexity_scale: '',\r\n            expiration_date_of_examine: ''\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.updateState = this.updateState.bind(this);\r\n    }\r\n\r\n    onChange(e) {\r\n      this.setState({[e.target.name]: e.target.value});\r\n  }\r\n\r\n  onSubmit(e) {\r\n      e.preventDefault();\r\n\r\n      const patient_to_add = {\r\n        patient_id: this.state.patient_id,\r\n        number_of_cancellations: this.state.number_of_cancellations,\r\n        awaiting_since: this.state.awaiting_since,\r\n        first_name: this.state.first_name,\r\n        last_name: this.state.last_name,\r\n        date_of_birth: this.state.date_of_birth,\r\n        gender: this.state.gender,\r\n        address: this.state.address,\r\n        phone_number: this.state.phone_number,\r\n        type_of_surgery: this.state.type_of_surgery,\r\n        duration: this.state.duration,\r\n        status: this.state.status,\r\n        complexity_scale: this.state.complexity_scale,\r\n        expiration_date_of_examine: this.state.expiration_date_of_examine        \r\n      };\r\n      \r\n      console.log(patient_to_add);      \r\n      addPatient(patient_to_add).then(res => {\r\n          if (res) {\r\n            alert('Added patient ' + patient_to_add.first_name)\r\n            window.location.reload();\r\n          }\r\n          else {\r\n          }\r\n      })\r\n  }\r\n\r\n    updateState = state => {\r\n        this.setState({ selectedRows: state.selectedRows });\r\n      }\r\n\r\n    componentDidMount() {\r\n      \r\n        const url = 'https://server-soroka-demo.herokuapp.com/patients/';\r\n        fetch(url, {\r\n            method: \"GET\"\r\n        }).then(res => res.json()).then(patients_data => {\r\n            this.setState({patients: patients_data})\r\n        }).catch((err) => {\r\n          console.log('test')\r\n        })\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <Styles>\r\n        <DataTable\r\n          title=\"Patients list\"\r\n          columns={columns}\r\n          highlightOnHover\r\n          data={this.state.patients}\r\n          selectableRows\r\n          dense\r\n          onSelectedRowsChange={this.updateState}\r\n        />\r\n        <Accordion>\r\n          <Card>\r\n            <Card.Header>\r\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                Add Patient\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey=\"0\">\r\n              <Card.Body>\r\n              <div className=\"overlay\"></div>\r\n                <Container>\r\n                    <Form onSubmit={this.onSubmit}>\r\n                         {/* NEED TO FIX THIS ONE! */}\r\n                            <Form.Label>Patient ID</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"patient_id\" placeholder=\"Enter patient ID\" onChange={this.onChange}/>\r\n                            <Form.Label>First Name</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"first_name\" placeholder=\"Enter first name\" onChange={this.onChange}/>\r\n                            <Form.Label>Last Name</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"last_name\" placeholder=\"Enter last name\" onChange={this.onChange}/>\r\n                            <Form.Label>Date Of Birth</Form.Label>\r\n                            <Form.Control type=\"date\" name=\"date_of_birth\" placeholder=\"Enter date of birth\" onChange={this.onChange}/>\r\n                            <Form.Label>Gender</Form.Label>\r\n                            <Form.Control as=\"select\" value={this.state.gender} name=\"gender\" placeholder=\"Enter patient's gender\" onChange={this.onChange}>\r\n                              <option value='M'>Male</option>\r\n                              <option value='F'>Female</option>\r\n                            </Form.Control>\r\n                            <Form.Label>Phone Number</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"phone_number\" placeholder=\"Enter patient's phone number\" onChange={this.onChange}/>\r\n                            <Form.Label>Address</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"address\" placeholder=\"Enter patient's address\" onChange={this.onChange}/>\r\n                            <Form.Label>Type Of Surgery</Form.Label>\r\n                            <Form.Control type=\"number\" name=\"type_of_surgery\" placeholder=\"Enter type of surgery\" onChange={this.onChange}/>\r\n                            <Form.Label>Duration</Form.Label>\r\n                            <Form.Control type=\"time\" name=\"duration\" placeholder=\"Enter duration of surgery\" onChange={this.onChange}/>\r\n                            <Form.Label>Status</Form.Label>\r\n                            <Form.Control type=\"number\" name=\"status\" placeholder=\"Enter patient's status\" onChange={this.onChange}/>\r\n                            <Form.Label>Complexity Scale</Form.Label>\r\n                            <Form.Control type=\"number\" name=\"complexity_scale\" placeholder=\"Enter complexity scale of the surgery\" onChange={this.onChange}/>\r\n                            <Form.Label>Number Of Cancellations</Form.Label>\r\n                            <Form.Control type=\"number\" name=\"number_of_cancellations\" placeholder=\"Enter number of cancellations\" onChange={this.onChange}/>\r\n                            <Form.Label>Awaiting Since</Form.Label>\r\n                            <Form.Control type=\"date\" name=\"awaiting_since\" placeholder=\"The patient has been waiting since\" onChange={this.onChange}/>\r\n                            <Form.Label>Expiration Date Of Pre-Operation Examine</Form.Label>\r\n                            <Form.Control type=\"date\" name=\"expiration_date_of_examine\" placeholder=\"The patient's expiration dat of pre-operation examine\" onChange={this.onChange}/>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Save Patient\r\n                        </Button>\r\n                    </Form>\r\n                </Container>\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n        </Accordion>\r\n      </Styles>\r\n    )\r\n  }\r\n};\r\n \r\nexport default Patients\r\n","import React from \"react\";\r\n\r\nexport class Footer extends React.Component {\r\n\r\n\r\n    render() { \r\n        return(\r\n            <footer className=\"footer text-center \">\r\n                <div className=\"container\">\r\n                    <p className=\"footer-text\">Copyright 2020 Raz Lapid. All rights reserved</p>\r\n                </div>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer","import React from 'react'; \r\nimport { Route, Switch, Router } from 'react-router-dom';                       // Need this for the pages routing\r\nimport { About } from './components/pages/About';                               // About component\r\nimport { Home } from './components/pages/Home';                                 // Home component\r\nimport { Contact } from './components/pages/Contact';                           // Contact component\r\nimport { NoMatch } from './components/pages/NoMatch';                           // NoMatch component\r\nimport { Layout } from './components/layout/Layout';                            // Layout component\r\nimport { NavigationBar } from './components/NavigationBar';                     // Navbar component\r\nimport { Jumbotron } from './components/Jumbotron';                             // Jumbotron component\r\nimport { Menu } from './components/pages/Menu';                                 // Menu component\r\nimport { Register } from './components/pages/Register';                         // Register component\r\nimport { ViewBoard } from './components/pages/ViewBoard';                       // Board view component\r\nimport { OrthopedicMenu }  from './components/pages/OrthopedicMenu';            // OrthopedicMenu component\r\nimport { PreOpMenu } from './components/pages/PreOpMenu';                       // PreoperationMenu component\r\nimport { OpMngmtMenu } from './components/pages/OpMngmtMenu';                   // Operating Rooms Managemtn component\r\nimport { AwaitingSurgeries } from './components/pages/AwaitingSurgeries';       // AwaitingSurgeries component\r\nimport { AwaitingSurgeriesTest } from './components/pages/AwaitingSurgerisTest';\r\nimport { ViewBoardTest } from './components/pages/ViewBoardTest';\r\nimport { Calendar } from './components/pages/Calendar';\r\nimport { Patients } from './components/pages/Patients';\r\nimport { Footer } from './components/Footer';\r\nimport history from './history';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nclass App extends React.Component {\r\n  \r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <NavigationBar/>\r\n        <Jumbotron/>\r\n        <Layout>\r\n          <Router history={history}>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home}/>\r\n              <Route exact path=\"/menu\" component={Menu}/>\r\n              <Route exact path=\"/register\" component={Register}/>\r\n              <Route exact path=\"/about\" component={About}/>\r\n              <Route exact path=\"/contact\" component={Contact}/>\r\n              <Route exact path=\"/viewboard\" component={ViewBoard}/>\r\n              <Route exact path=\"/orthopedicmenu\" component={OrthopedicMenu}/>\r\n              <Route exact path=\"/preopmenu\" component={PreOpMenu}/>\r\n              <Route exact path=\"/opmenu\" component={OpMngmtMenu}/>\r\n              <Route exact path=\"/awaitingsurgeries\" component={AwaitingSurgeries}/>\r\n              <Route exact path=\"/awaitingsurgeriestest\" component={AwaitingSurgeriesTest}/>\r\n              <Route exact path=\"/viewboardtest\" component={ViewBoardTest}/>\r\n              <Route exact path=\"/calendar\" component={Calendar}/>\r\n              <Route exact path=\"/patients\" component={Patients}/>\r\n              <Route component={NoMatch} />\r\n            </Switch>\r\n          </Router>\r\n        </Layout>\r\n        <br></br>\r\n        <Footer/>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}